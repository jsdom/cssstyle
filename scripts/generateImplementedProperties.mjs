import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import { camelToDashed } from '../lib/parsers.js';

const dashedProperties = fs
  .readdirSync(resolve('../lib/properties'))
  .filter((propertyFile) => path.extname(propertyFile) === '.js')
  .map((propertyFile) => camelToDashed(path.basename(propertyFile, '.js')));

const outputFile = resolve('../lib/implementedProperties.js');

const propertyNamesJSON = JSON.stringify(dashedProperties, undefined, 2);
const dateToday = new Date();
const dateTodayFormatted = dateToday.toISOString().split('T')[0];

const output = `
'use strict';
// autogenerated - ${dateTodayFormatted}
// https://www.w3.org/Style/CSS/all-properties.en.html

module.exports = new Set(${propertyNamesJSON});
`;

fs.writeFileSync(outputFile, output);

// TODO: remove when we can drop Node.js 18 support and use import.meta.dirname.
function resolve(relativePath) {
  return path.resolve(path.dirname(fileURLToPath(import.meta.url)), relativePath);
}
