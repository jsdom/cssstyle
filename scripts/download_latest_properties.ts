/*
 * W3C provides JSON list of all CSS properties and their status in the standard
 *
 * documentation: https://www.w3.org/Style/CSS/all-properties.en.html
 * JSON url: ( https://www.w3.org/Style/CSS/all-properties.en.json )
 *
 * Download that file, filter out duplicates and filter the properties based on the wanted standard level
 *
 * ED   - Editors' Draft (not a W3C Technical Report)
 * FPWD - First Public Working Draft
 * WD   - Working Draft
 * LC   - Last Call Working Draft
 * CR   - Candidate Recommendation
 * PR   - Proposed Recommendation
 * REC  - Recommendation
 * NOTE - Working Group Note
 */

import fs from 'fs';

import path from 'path';

import request from 'request';

import { camelToDashed } from '../lib/parsers';

const url = 'https://www.w3.org/Style/CSS/all-properties.en.json';

console.log('Downloading CSS properties...');

function toCamelCase(propName: string) {
  return propName.replace(/-([a-z])/g, function (g) {
    return g[1].toUpperCase();
  });
}

interface RemoteCSSProperty {
  readonly property: string;
  readonly url: string;
  readonly status: string;
  readonly title: string;
}

request(url, function (error, response, body) {
  if (!error && response.statusCode === 200) {
    const allCSSProperties: readonly RemoteCSSProperty[] = JSON.parse(body);

    // Filter out all properties newer than Working Draft
    const workingDraftAndOlderProperties = allCSSProperties.filter(function (cssProp) {
      // TODO: --* css Needs additional logic to this module, so filter it out for now
      return cssProp.status !== 'ED' && cssProp.status !== 'FPWD' && cssProp.property !== '--*';
    });

    // Remove duplicates, there can be many properties in different states of standard
    // and add only property names to the list
    const CSSPropertyNames: string[] = [];
    workingDraftAndOlderProperties.forEach(function (cssProp) {
      const camelCaseName = toCamelCase(cssProp.property);

      if (CSSPropertyNames.indexOf(camelCaseName) === -1) {
        CSSPropertyNames.push(camelCaseName);
      }
    });

    const out_file = fs.createWriteStream(path.resolve(__dirname, './../lib/allProperties.ts'), {
      encoding: 'utf-8',
    });

    const date_today = new Date();
    out_file.write(
      '// autogenerated - ' +
        (date_today.getMonth() + 1 + '/' + date_today.getDate() + '/' + date_today.getFullYear()) +
        '\n\n'
    );
    out_file.write('/*\n *\n * https://www.w3.org/Style/CSS/all-properties.en.html\n */\n\n');
    out_file.write(
      'export const ALL_PROPERTIES = new Set(' +
        JSON.stringify(CSSPropertyNames.map(camelToDashed), null, 2) +
        ');\n'
    );

    out_file.end(function (err: unknown) {
      if (err) {
        throw err;
      }

      console.log('Generated ' + Object.keys(CSSPropertyNames).length + ' properties.');
    });
  } else {
    throw error;
  }
});
